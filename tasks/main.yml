---
# tasks file for roles/acmesh

- name: Include meta vars
  include_vars:
    file: meta/main.yml
    name: meta

- name: Verify OS compatibility
  assert:
    that:
      - ansible_distribution_release in (meta.galaxy_info.platforms | selectattr('name', 'search', ansible_distribution) | first).versions
    success_msg: "{{ ansible_distribution }} {{ ansible_distribution_release }} ({{ ansible_os_family }})"
    fail_msg: "{{ ansible_distribution }} {{ ansible_distribution_release }} ({{ ansible_os_family }}) not supported by Role!"

- name: Add the OS specific variables
  include_vars:
    file: "{{ item }}"
  when: lookup('fileglob', "vars/" ~ item, wantlist=True, errors='ignore') | length > 0
  loop:
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_distribution }}/{{ ansible_distribution_release }}.yml"

- name: Include task install
  include_tasks: install.yml

- name: Include task config
  include_tasks: config.yml

- name: Issue Server FQDN Cert
  command:
    cmd: "/opt/acme.sh/acme.sh --home \"/opt/acme.sh\" --issue --dns dns_cf -d {{ ansible_fqdn }}"
    creates: "/opt/acme.sh/{{ ansible_fqdn }}/{{ ansible_fqdn }}.cer"

- name: Install Server FQDN Cert to default path
  command:
    cmd: "/opt/acme.sh/acme.sh --home \"/opt/acme.sh\" --install-cert -d {{ ansible_fqdn }} --fullchain-file /etc/ssl/certs/{{ ansible_fqdn }}.cer --key-file /etc/ssl/private/{{ ansible_fqdn }}.key"
    creates: "/etc/ssl/certs/{{ ansible_fqdn }}.cer"

- name: Ensure Server FQDN Key permissions
  file:
    path: "/etc/ssl/private/{{ ansible_fqdn }}.key"
    owner: 'root'
    group: 'ssl-cert'
    mode: 0640

- name: Ensure CA file
  copy:
    src: "/opt/acme.sh/{{ ansible_fqdn }}/ca.cer"
    dest: /etc/ssl/certs/ca.crt
    remote_src: yes
    owner: root
    group: root
    mode: '0644'